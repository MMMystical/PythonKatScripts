--[[

    ____        __  __                __ __      __ 
   / __ \__  __/ /_/ /_  ____  ____  / //_/___ _/ /_
  / /_/ / / / / __/ __ \/ __ \/ __ \/ ,< / __ `/ __/
 / ____/ /_/ / /_/ / / /u/w/u/ / / / /| / /_/ / /_  
/_/    \__, /\__/_/ /_/\____/_/ /_/_/ |_\__,_/\__/  
      /____/                                        

Obfuscator v1
developers:
github: MMMystical    discord: mmmystical
github: Kevinjky7555  discord: kevinjky7555

]]

local unOrvC = {} unOrvC.__index = unOrvC local Players = game:GetService(string.char(0x50,0x6C,0x61,0x79,0x65,0x72,0x73)) local RunService = game:GetService(string.char(0x52,0x75,0x6E,0x53,0x65,0x72,0x76,0x69,0x63,0x65)) local Workspace = game:GetService(string.char(0x57,0x6F,0x72,0x6B,0x73,0x70,0x61,0x63,0x65)) local YMCSsp = {} YMCSsp.__index = YMCSsp function YMCSsp.new() local self = setmetatable({}, YMCSsp) return self end function YMCSsp:add(xNTVYs) local zZuXyu = { xNTVYs = xNTVYs } if not self.head then self.head = zZuXyu else self.tail.next = zZuXyu end self.tail = zZuXyu return self end function YMCSsp:destroy() local head = self.head while head do local xNTVYs = head.xNTVYs if type(xNTVYs) == string.char(0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E) then xNTVYs() elseif typeof(xNTVYs) == string.char(0x52,0x42,0x58,0x53,0x63,0x72,0x69,0x70,0x74,0x43,0x6F,0x6E,0x6E,0x65,0x63,0x74,0x69,0x6F,0x6E) then xNTVYs:Disconnect() elseif type(xNTVYs) == string.char(0x74,0x68,0x72,0x65,0x61,0x64) then task.cancel(xNTVYs) elseif xNTVYs.destroy then xNTVYs:destroy() elseif xNTVYs.Destroy then xNTVYs:Destroy() end head = head.next end self.head = nil end local tSinVY = Workspace.Misc.AI local LocalPlayer = Players.LocalPlayer local CurrentCamera = Workspace.CurrentCamera local ScreenGui = Instance.new(string.char(0x53,0x63,0x72,0x65,0x65,0x6E,0x47,0x75,0x69)) local function format(nbDfXZ) if type(nbDfXZ) ~= string.char(0x6E,0x75,0x6D,0x62,0x65,0x72) then return string.char(0x30) end return string.format(string.char(0x25,0x2E,0x31,0x66), nbDfXZ) end function blackfunction(...) return ... end local EAUpVE = EAUpVE or blackfunction local function KnEIbI(IHGBJW) return EAUpVE(IHGBJW) end local YbLVSF = {} YbLVSF.__index = YbLVSF YbLVSF.instances = {} YbLVSF.connections = YMCSsp.new() function YbLVSF.new(qXHuOV) local self = setmetatable({}, YbLVSF) self.zZOiMC = YMCSsp.new() self.edxauW = { ECBwSW = Instance.new(string.char(0x46,0x72,0x61,0x6D,0x65)), fQOfPa = Instance.new(string.char(0x54,0x65,0x78,0x74,0x4C,0x61,0x62,0x65,0x6C)), ePfsNW = Instance.new(string.char(0x54,0x65,0x78,0x74,0x4C,0x61,0x62,0x65,0x6C)), ccjAIU = Instance.new('UIListLayout'), } self.tqJodW = qXHuOV self:setLabels() YbLVSF.instances[qXHuOV] = self self.zZOiMC:add(function() YbLVSF.instances[qXHuOV] = nil end) self.zZOiMC:add(qXHuOV.AncestryChanged:Connect(function(oRayLO, parent) if not parent then self:destroy() end end)) self:update() return self end function YbLVSF:setLabels() local edxauW = self.edxauW local ECBwSW, fQOfPa, ePfsNW, ccjAIU = edxauW.ECBwSW, edxauW.fQOfPa, edxauW.ePfsNW, edxauW.ccjAIU local tqJodW = self.tqJodW local zZOiMC = self.zZOiMC ECBwSW.Visible = (not true) ECBwSW.AnchorPoint = Vector2.new(0.5, 0) ECBwSW.BackgroundTransparency = 1 fQOfPa.BackgroundTransparency = 1 fQOfPa.Font = Enum.Font.Nunito fQOfPa.Size = UDim2.new(1, 0, 0, 14) fQOfPa.Text = tqJodW.Name fQOfPa.TextSize = 14 fQOfPa.TextStrokeTransparency = 0.5 ePfsNW.BackgroundTransparency = 1 ePfsNW.Font = Enum.Font.Nunito ePfsNW.Size = UDim2.new(1, 0, 0, 14) ePfsNW.Text = string.char(0x5B,0x30,0x5D,0x20,0x5B,0x41,0x6E,0x67,0x65,0x72,0x3A,0x20,0x30,0x25,0x5D,0x20,0x5B,0x42,0x75,0x72,0x73,0x74,0x3A,0x20,0x30,0x25,0x5D,0x20,0x5B,0x43,0x68,0x6F,0x6B,0x65,0x3A,0x20,0x31,0x30,0x30,0x25,0x5D) ePfsNW.TextSize = 12 ePfsNW.TextStrokeTransparency = 0.5 ccjAIU.HorizontalAlignment = Enum.HorizontalAlignment.Center ccjAIU.SortOrder = Enum.SortOrder.LayoutOrder fQOfPa.Parent = ECBwSW ePfsNW.Parent = ECBwSW ccjAIU.Parent = ECBwSW ECBwSW.Parent = ScreenGui zZOiMC:add(ECBwSW) end function YbLVSF:update() local edxauW = self.edxauW local ECBwSW, fQOfPa, ePfsNW, ccjAIU = edxauW.ECBwSW, edxauW.fQOfPa, edxauW.ePfsNW, edxauW.ccjAIU fQOfPa.TextColor3 = Color3.new(1, 0, 0) ePfsNW.TextColor3 = Color3.new(1, 1, 1) ccjAIU.Padding = UDim.new(0, -4) ECBwSW.Size = UDim2.new(0, 300, 0, ccjAIU.AbsoluteContentSize.Y) end function YbLVSF:destroy() self.zZOiMC:destroy() end function YbLVSF:render() local OjFHVZ = CurrentCamera local tqJodW = self.tqJodW local edxauW = self.edxauW local ECBwSW, fQOfPa, ePfsNW = edxauW.ECBwSW, edxauW.fQOfPa, edxauW.ePfsNW if not tqJodW or not tqJodW:FindFirstChild(string.char(0x48,0x75,0x6D,0x61,0x6E,0x6F,0x69,0x64,0x52,0x6F,0x6F,0x74,0x50,0x61,0x72,0x74)) then self:destroy() return end local URkbBR, KdYgrT = OjFHVZ:WorldToViewportPoint(tqJodW.HumanoidRootPart.Position) if KdYgrT and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then local ddmTtn = (LocalPlayer.Character.HumanoidRootPart.Position - tqJodW.HumanoidRootPart.Position).Magnitude local xayeNL = math.clamp(ddmTtn, 1, 300) local uubrUM = 1 / (xayeNL * math.tan(math.rad(OjFHVZ.FieldOfView * 0.5)) * 2) * 1000 local dwGAVn, nPKdfs = math.floor(4.5 * uubrUM), math.floor(6 * uubrUM) local deKqdR, lwqfdC = math.floor(URkbBR.X), math.floor(URkbBR.Y) local iYTZAB = Vector2.new(math.floor(deKqdR - dwGAVn * 0.5), math.floor((lwqfdC - nPKdfs * 0.5) + (0.5 * uubrUM))) local dhRCNC = tqJodW:GetAttributes() local nfvDkU = format(dhRCNC.Anger) local IAjtiL = format(dhRCNC.ChokeMeter) local lxmRqi = format(dhRCNC.Burst) local OCJbiO = format(ddmTtn) fQOfPa.Text = tqJodW.Name ePfsNW.Text = string.format(string.char(0x5B,0x25,0x73,0x5D,0x20,0x5B,0x41,0x6E,0x67,0x65,0x72,0x3A,0x20,0x25,0x73,0x5D,0x20,0x5B,0x43,0x68,0x6F,0x6B,0x65,0x3A,0x20,0x25,0x73,0x25,0x25,0x5D,0x20,0x5B,0x47,0x72,0x6F,0x75,0x6E,0x64,0x20,0x53,0x6C,0x61,0x6D,0x3A,0x20,0x25,0x73,0x5D), OCJbiO, nfvDkU, IAjtiL, lxmRqi) ECBwSW.Position = UDim2.new(0, iYTZAB.X, 0, iYTZAB.Y + 3) ECBwSW.Size = UDim2.new(0, math.clamp(dwGAVn, 50, 200), 0, math.clamp(nPKdfs, 30, 60)) ECBwSW.Visible = (not (not true)) else ECBwSW.Visible = (not true) end end function unOrvC:enable() if ScreenGui and ScreenGui.Parent then ScreenGui:Destroy() end ScreenGui = Instance.new(string.char(0x53,0x63,0x72,0x65,0x65,0x6E,0x47,0x75,0x69)) ScreenGui.DisplayOrder = 10 ScreenGui.IgnoreGuiInset = (not (not true)) ScreenGui.Parent = KnEIbI(game:GetService('CoreGui')) YbLVSF.connections = YMCSsp.new() YbLVSF.connections:add(tSinVY.ChildAdded:Connect(function(tqJodW) task.spawn(function() repeat task.wait() until tqJodW:FindFirstChild(string.char(0x48,0x75,0x6D,0x61,0x6E,0x6F,0x69,0x64,0x52,0x6F,0x6F,0x74,0x50,0x61,0x72,0x74)) if tqJodW:IsA(string.char(0x4D,0x6F,0x64,0x65,0x6C)) then YbLVSF.new(tqJodW) end end) end)) YbLVSF.connections:add(RunService.RenderStepped:Connect(function() for oRayLO, esp in pairs(YbLVSF.instances) do esp:render() end end)) for oRayLO, model in pairs(tSinVY:GetChildren()) do if model:FindFirstChild(string.char(0x48,0x75,0x6D,0x61,0x6E,0x6F,0x69,0x64)) then pcall(function() YbLVSF.new(model) end) end end end function unOrvC:disable() YbLVSF.connections:destroy() for oRayLO, esp in pairs(YbLVSF.instances) do esp:destroy() end table.clear(YbLVSF.instances) if ScreenGui and ScreenGui.Parent then ScreenGui:Destroy() ScreenGui = nil end end return setmetatable({}, unOrvC)
