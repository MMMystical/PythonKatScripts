--[[

    ____        __  __                __ __      __ 
   / __ \__  __/ /_/ /_  ____  ____  / //_/___ _/ /_
  / /_/ / / / / __/ __ \/ __ \/ __ \/ ,< / __ `/ __/
 / ____/ /_/ / /_/ / / /u/w/u/ / / / /| / /_/ / /_  
/_/    \__, /\__/_/ /_/\____/_/ /_/_/ |_\__,_/\__/  
      /____/                                        

Obfuscator v1
developers:
github: MMMystical    discord: mmmystical
github: Kevinjky7555  discord: kevinjky7555
]]

local AZsufU = {} AZsufU.__index = AZsufU local Players = game:GetService(string.char(0x50,0x6C,0x61,0x79,0x65,0x72,0x73)) local RunService = game:GetService(string.char(0x52,0x75,0x6E,0x53,0x65,0x72,0x76,0x69,0x63,0x65)) local Workspace = game:GetService(string.char(0x57,0x6F,0x72,0x6B,0x73,0x70,0x61,0x63,0x65)) local Uhmrss = {} Uhmrss.__index = Uhmrss function Uhmrss.new() local self = setmetatable({}, Uhmrss) return self end function Uhmrss:add(GdgGOF) local RNMisW = { GdgGOF = GdgGOF } if not self.head then self.head = RNMisW else self.tail.next = RNMisW end self.tail = RNMisW return self end function Uhmrss:destroy() local head = self.head while head do local GdgGOF = head.GdgGOF if type(GdgGOF) == string.char(0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E) then GdgGOF() elseif typeof(GdgGOF) == string.char(0x52,0x42,0x58,0x53,0x63,0x72,0x69,0x70,0x74,0x43,0x6F,0x6E,0x6E,0x65,0x63,0x74,0x69,0x6F,0x6E) then GdgGOF:Disconnect() elseif type(GdgGOF) == string.char(0x74,0x68,0x72,0x65,0x61,0x64) then task.cancel(GdgGOF) elseif GdgGOF.destroy then GdgGOF:destroy() elseif GdgGOF.Destroy then GdgGOF:Destroy() end head = head.next end self.head = nil end local ECGONq = Workspace.Misc.AI local LocalPlayer = Players.LocalPlayer local CurrentCamera = Workspace.CurrentCamera local ScreenGui = Instance.new(string.char(0x53,0x63,0x72,0x65,0x65,0x6E,0x47,0x75,0x69)) local function format(Ccpgsn) if type(Ccpgsn) ~= string.char(0x6E,0x75,0x6D,0x62,0x65,0x72) then return string.char(0x30) end return string.format(string.char(0x25,0x2E,0x31,0x66), Ccpgsn) end function blackfunction(...) return ... end local SNgoEH = SNgoEH or blackfunction local function PSQLWG(rniBDN) return SNgoEH(rniBDN) end local UFTiDC = {} UFTiDC.__index = UFTiDC UFTiDC.instances = {} UFTiDC.connections = Uhmrss.new() function UFTiDC.new(tjDsvq) local self = setmetatable({}, UFTiDC) self.kbvWeV = Uhmrss.new() self.Lzhowd = { KRqGhs = Instance.new(string.char(0x46,0x72,0x61,0x6D,0x65)), FEPDmP = Instance.new(string.char(0x54,0x65,0x78,0x74,0x4C,0x61,0x62,0x65,0x6C)), rSCyZM = Instance.new(string.char(0x54,0x65,0x78,0x74,0x4C,0x61,0x62,0x65,0x6C)), seGiYa = Instance.new('UIListLayout'), } self.RCvDHo = tjDsvq self:setLabels() UFTiDC.instances[tjDsvq] = self self.kbvWeV:add(function() UFTiDC.instances[tjDsvq] = nil end) self.kbvWeV:add(tjDsvq.AncestryChanged:Connect(function(IypCCi, parent) if not parent then self:destroy() end end)) self:update() return self end function UFTiDC:setLabels() local Lzhowd = self.Lzhowd local KRqGhs, FEPDmP, rSCyZM, seGiYa = Lzhowd.KRqGhs, Lzhowd.FEPDmP, Lzhowd.rSCyZM, Lzhowd.seGiYa local RCvDHo = self.RCvDHo local kbvWeV = self.kbvWeV KRqGhs.Visible = (not true) KRqGhs.AnchorPoint = Vector2.new(0.5, 0) KRqGhs.BackgroundTransparency = 1 FEPDmP.BackgroundTransparency = 1 FEPDmP.Font = Enum.Font.Nunito FEPDmP.Size = UDim2.new(1, 0, 0, 14) FEPDmP.Text = RCvDHo.Name FEPDmP.TextSize = 14 FEPDmP.TextStrokeTransparency = 0.5 rSCyZM.BackgroundTransparency = 1 rSCyZM.Font = Enum.Font.Nunito rSCyZM.Size = UDim2.new(1, 0, 0, 14) rSCyZM.Text = string.char(0x5B,0x30,0x5D,0x20,0x5B,0x41,0x6E,0x67,0x65,0x72,0x3A,0x20,0x30,0x25,0x5D,0x20,0x5B,0x42,0x75,0x72,0x73,0x74,0x3A,0x20,0x30,0x25,0x5D,0x20,0x5B,0x43,0x68,0x6F,0x6B,0x65,0x3A,0x20,0x31,0x30,0x30,0x25,0x5D) rSCyZM.TextSize = 12 rSCyZM.TextStrokeTransparency = 0.5 seGiYa.HorizontalAlignment = Enum.HorizontalAlignment.Center seGiYa.SortOrder = Enum.SortOrder.LayoutOrder FEPDmP.Parent = KRqGhs rSCyZM.Parent = KRqGhs seGiYa.Parent = KRqGhs KRqGhs.Parent = ScreenGui kbvWeV:add(KRqGhs) end function UFTiDC:update() local Lzhowd = self.Lzhowd local KRqGhs, FEPDmP, rSCyZM, seGiYa = Lzhowd.KRqGhs, Lzhowd.FEPDmP, Lzhowd.rSCyZM, Lzhowd.seGiYa FEPDmP.TextColor3 = Color3.new(1, 0, 0) rSCyZM.TextColor3 = Color3.new(1, 1, 1) seGiYa.Padding = UDim.new(0, -4) KRqGhs.Size = UDim2.new(0, 300, 0, seGiYa.AbsoluteContentSize.Y) end function UFTiDC:destroy() self.kbvWeV:destroy() end function UFTiDC:render() local PDUSCx = CurrentCamera local RCvDHo = self.RCvDHo local Lzhowd = self.Lzhowd local KRqGhs, FEPDmP, rSCyZM = Lzhowd.KRqGhs, Lzhowd.FEPDmP, Lzhowd.rSCyZM if not RCvDHo or not RCvDHo:FindFirstChild(string.char(0x48,0x75,0x6D,0x61,0x6E,0x6F,0x69,0x64,0x52,0x6F,0x6F,0x74,0x50,0x61,0x72,0x74)) then self:destroy() return end local rQNpMF, OahPQb = PDUSCx:WorldToViewportPoint(RCvDHo.HumanoidRootPart.Position) if OahPQb and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then local XDZWjw = (LocalPlayer.Character.HumanoidRootPart.Position - RCvDHo.HumanoidRootPart.Position).Magnitude local IOLWDK = math.clamp(XDZWjw, 1, 300) local EXaCoH = 1 / (IOLWDK * math.tan(math.rad(PDUSCx.FieldOfView * 0.5)) * 2) * 1000 local RBwyFt, uhEkoO = math.floor(4.5 * EXaCoH), math.floor(6 * EXaCoH) local AdWnZh, HHestn = math.floor(rQNpMF.X), math.floor(rQNpMF.Y) local yVphAW = Vector2.new(math.floor(AdWnZh - RBwyFt * 0.5), math.floor((HHestn - uhEkoO * 0.5) + (0.5 * EXaCoH))) local PKgyTl = RCvDHo:GetAttributes() local rEpZmz = format(PKgyTl.Anger) local qzCAHJ = format(PKgyTl.ChokeMeter) local gLcqpe = format(PKgyTl.Burst) local twmMnn = format(XDZWjw) FEPDmP.Text = RCvDHo.Name rSCyZM.Text = string.format(string.char(0x5B,0x25,0x73,0x5D,0x20,0x5B,0x41,0x6E,0x67,0x65,0x72,0x3A,0x20,0x25,0x73,0x5D,0x20,0x5B,0x43,0x68,0x6F,0x6B,0x65,0x3A,0x20,0x25,0x73,0x25,0x25,0x5D,0x20,0x5B,0x47,0x72,0x6F,0x75,0x6E,0x64,0x20,0x53,0x6C,0x61,0x6D,0x3A,0x20,0x25,0x73,0x5D), twmMnn, rEpZmz, qzCAHJ, gLcqpe) KRqGhs.Position = UDim2.new(0, yVphAW.X, 0, yVphAW.Y + 3) KRqGhs.Size = UDim2.new(0, math.clamp(RBwyFt, 50, 200), 0, math.clamp(uhEkoO, 30, 60)) KRqGhs.Visible = (not (not true)) else KRqGhs.Visible = (not true) end end function AZsufU:enable() if ScreenGui and ScreenGui.Parent then ScreenGui:Destroy() end ScreenGui = Instance.new(string.char(0x53,0x63,0x72,0x65,0x65,0x6E,0x47,0x75,0x69)) ScreenGui.DisplayOrder = 10 ScreenGui.IgnoreGuiInset = (not (not true)) ScreenGui.Parent = PSQLWG(game:GetService('CoreGui')) UFTiDC.connections = Uhmrss.new() UFTiDC.connections:add(ECGONq.ChildAdded:Connect(function(RCvDHo) task.spawn(function() repeat task.wait() until RCvDHo:FindFirstChild(string.char(0x48,0x75,0x6D,0x61,0x6E,0x6F,0x69,0x64,0x52,0x6F,0x6F,0x74,0x50,0x61,0x72,0x74)) if RCvDHo:IsA(string.char(0x4D,0x6F,0x64,0x65,0x6C)) then UFTiDC.new(RCvDHo) end end) end)) UFTiDC.connections:add(RunService.RenderStepped:Connect(function() for IypCCi, esp in pairs(UFTiDC.instances) do esp:render() end end)) for IypCCi, model in pairs(ECGONq:GetChildren()) do if model:FindFirstChild(string.char(0x48,0x75,0x6D,0x61,0x6E,0x6F,0x69,0x64)) then pcall(function() UFTiDC.new(model) end) end end end function AZsufU:disable() UFTiDC.connections:destroy() for IypCCi, esp in pairs(UFTiDC.instances) do esp:destroy() end table.clear(UFTiDC.instances) if ScreenGui and ScreenGui.Parent then ScreenGui:Destroy() ScreenGui = nil end end return setmetatable({}, AZsufU)
