--[[

    ____        __  __                __ __      __ 
   / __ \__  __/ /_/ /_  ____  ____  / //_/___ _/ /_
  / /_/ / / / / __/ __ \/ __ \/ __ \/ ,< / __ `/ __/
 / ____/ /_/ / /_/ / / /u/w/u/ / / / /| / /_/ / /_  
/_/    \__, /\__/_/ /_/\____/_/ /_/_/ |_\__,_/\__/  
      /____/                                        

Obfuscator v1
developers:
github: MMMystical    discord: mmmystical
github: Kevinjky7555  discord: kevinjky7555
]]

local xMzbRs = {} xMzbRs.__index = xMzbRs local Players = game:GetService(string.char(0x50,0x6C,0x61,0x79,0x65,0x72,0x73)) local RunService = game:GetService(string.char(0x52,0x75,0x6E,0x53,0x65,0x72,0x76,0x69,0x63,0x65)) local Workspace = game:GetService(string.char(0x57,0x6F,0x72,0x6B,0x73,0x70,0x61,0x63,0x65)) local LocalPlayer = Players.LocalPlayer local CurrentCamera = Workspace.CurrentCamera local ENBYtb = {} ENBYtb.__index = ENBYtb function ENBYtb.new() local self = setmetatable({}, ENBYtb) return self end function ENBYtb:add(kpXytf) local hXaVzZ = { kpXytf = kpXytf } if not self.head then self.head = hXaVzZ else self.tail.next = hXaVzZ end self.tail = hXaVzZ return self end function ENBYtb:destroy() local head = self.head while head do local kpXytf = head.kpXytf if type(kpXytf) == string.char(0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E) then kpXytf() elseif typeof(kpXytf) == string.char(0x52,0x42,0x58,0x53,0x63,0x72,0x69,0x70,0x74,0x43,0x6F,0x6E,0x6E,0x65,0x63,0x74,0x69,0x6F,0x6E) then kpXytf:Disconnect() elseif type(kpXytf) == string.char(0x74,0x68,0x72,0x65,0x61,0x64) then task.cancel(kpXytf) elseif kpXytf.destroy then kpXytf:destroy() elseif kpXytf.Destroy then kpXytf:Destroy() end head = head.next end self.head = nil end function blackfunction(...) return ... end local hvWWuh = hvWWuh or blackfunction local function VTMraP(AwljTl) return hvWWuh(AwljTl) end local BIbzvV = {} BIbzvV.__index = BIbzvV BIbzvV.instances = {} BIbzvV.connections = ENBYtb.new() local ScreenGui = Instance.new(string.char(0x53,0x63,0x72,0x65,0x65,0x6E,0x47,0x75,0x69)) local function format(GYzpeo) if type(GYzpeo) ~= string.char(0x6E,0x75,0x6D,0x62,0x65,0x72) then return string.char(0x30) end return string.format(string.char(0x25,0x2E,0x31,0x66), GYzpeo) end function BIbzvV.new(JQDBzI) local self = setmetatable({}, BIbzvV) self.DEFbMB = ENBYtb.new() self.FpxpBR = { MPEqzo = Instance.new(string.char(0x46,0x72,0x61,0x6D,0x65)), dldbEH = Instance.new(string.char(0x54,0x65,0x78,0x74,0x4C,0x61,0x62,0x65,0x6C)), hzaTBU = Instance.new(string.char(0x54,0x65,0x78,0x74,0x4C,0x61,0x62,0x65,0x6C)), yUnzBL = Instance.new('UIListLayout'), } self.JQDBzI = JQDBzI self:setLabels() BIbzvV.instances[JQDBzI] = self self.DEFbMB:add(function() BIbzvV.instances[JQDBzI] = nil end) self.DEFbMB:add(JQDBzI.CharacterAdded:Connect(function() task.wait(0.5) self:update() end)) self:update() return self end function BIbzvV:setLabels() local FpxpBR = self.FpxpBR local MPEqzo, dldbEH, hzaTBU, yUnzBL = FpxpBR.MPEqzo, FpxpBR.dldbEH, FpxpBR.hzaTBU, FpxpBR.yUnzBL local JQDBzI = self.JQDBzI local DEFbMB = self.DEFbMB MPEqzo.Visible = (not true) MPEqzo.AnchorPoint = Vector2.new(0.5, 0) MPEqzo.BackgroundTransparency = 1 dldbEH.BackgroundTransparency = 1 dldbEH.Font = Enum.Font.Nunito dldbEH.Size = UDim2.new(1, 0, 0, 14) dldbEH.TextSize = 14 dldbEH.TextStrokeTransparency = 0.5 hzaTBU.BackgroundTransparency = 1 hzaTBU.Font = Enum.Font.Nunito hzaTBU.Size = UDim2.new(1, 0, 0, 14) hzaTBU.Text = string.char(0x5B,0x30,0x5D,0x20,0x5B,0x48,0x65,0x61,0x6C,0x74,0x68,0x3A,0x20,0x30,0x25,0x5D) hzaTBU.TextSize = 12 hzaTBU.TextStrokeTransparency = 0.5 yUnzBL.HorizontalAlignment = Enum.HorizontalAlignment.Center yUnzBL.SortOrder = Enum.SortOrder.LayoutOrder dldbEH.Parent = MPEqzo hzaTBU.Parent = MPEqzo yUnzBL.Parent = MPEqzo MPEqzo.Parent = ScreenGui DEFbMB:add(MPEqzo) end function BIbzvV:update() local FpxpBR = self.FpxpBR local MPEqzo, dldbEH, hzaTBU, yUnzBL = FpxpBR.MPEqzo, FpxpBR.dldbEH, FpxpBR.hzaTBU, FpxpBR.yUnzBL dldbEH.TextColor3 = Color3.fromRGB(173, 216, 230) hzaTBU.TextColor3 = Color3.new(1, 1, 1) yUnzBL.Padding = UDim.new(0, -4) MPEqzo.Size = UDim2.new(0, 300, 0, yUnzBL.AbsoluteContentSize.Y) end function BIbzvV:destroy() self.DEFbMB:destroy() end function BIbzvV:render() local xAvbNt = CurrentCamera local JQDBzI = self.JQDBzI local VJjFRk = JQDBzI.Character local FpxpBR = self.FpxpBR local MPEqzo, dldbEH, hzaTBU = FpxpBR.MPEqzo, FpxpBR.dldbEH, FpxpBR.hzaTBU if not VJjFRk or not VJjFRk:FindFirstChild(string.char(0x48,0x75,0x6D,0x61,0x6E,0x6F,0x69,0x64,0x52,0x6F,0x6F,0x74,0x50,0x61,0x72,0x74)) or not VJjFRk:FindFirstChild(string.char(0x48,0x75,0x6D,0x61,0x6E,0x6F,0x69,0x64)) then MPEqzo.Visible = (not true) return end local KmSrWO, cpmQCX = xAvbNt:WorldToViewportPoint(VJjFRk.HumanoidRootPart.Position) if cpmQCX and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild(string.char(0x48,0x75,0x6D,0x61,0x6E,0x6F,0x69,0x64,0x52,0x6F,0x6F,0x74,0x50,0x61,0x72,0x74)) then local dqOipn = (LocalPlayer.Character.HumanoidRootPart.Position - VJjFRk.HumanoidRootPart.Position).Magnitude local fuWNbM = math.clamp(dqOipn, 1, 300) local GfDKRO = 1 / (fuWNbM * math.tan(math.rad(xAvbNt.FieldOfView * 0.5)) * 2) * 1000 local ifOICW, YTJgJm = math.floor(4.5 * GfDKRO), math.floor(6 * GfDKRO) local QIrlIA, cgjXot = math.floor(KmSrWO.X), math.floor(KmSrWO.Y) local SuSyhT = Vector2.new(math.floor(QIrlIA - ifOICW * 0.5), math.floor((cgjXot - YTJgJm * 0.5) + (0.5 * GfDKRO))) local BYbqzq = VJjFRk.Humanoid.Health local MmiGyr = VJjFRk.Humanoid.MaxHealth local ggXAhB = format(dqOipn) dldbEH.Text = string.format(string.char(0x25,0x73,0x20,0x28,0x40,0x25,0x73,0x29), JQDBzI.DisplayName, JQDBzI.Name) hzaTBU.Text = string.format(string.char(0x5B,0x25,0x73,0x5D,0x20,0x5B,0x48,0x65,0x61,0x6C,0x74,0x68,0x3A,0x20,0x25,0x2E,0x30,0x66,0x25,0x25,0x5D), ggXAhB, (BYbqzq / MmiGyr) * 100) MPEqzo.Position = UDim2.new(0, SuSyhT.X, 0, SuSyhT.Y + 3) MPEqzo.Size = UDim2.new(0, math.clamp(ifOICW, 50, 200), 0, math.clamp(YTJgJm, 30, 60)) MPEqzo.Visible = (not (not true)) else MPEqzo.Visible = (not true) end end function xMzbRs:enable() if ScreenGui and ScreenGui.Parent then ScreenGui:Destroy() end ScreenGui = Instance.new(string.char(0x53,0x63,0x72,0x65,0x65,0x6E,0x47,0x75,0x69)) ScreenGui.DisplayOrder = 10 ScreenGui.IgnoreGuiInset = (not (not true)) ScreenGui.Parent = VTMraP(game:GetService('CoreGui')) BIbzvV.connections = ENBYtb.new() BIbzvV.connections:add(Players.PlayerAdded:Connect(function(JQDBzI) if JQDBzI ~= LocalPlayer then BIbzvV.new(JQDBzI) end end)) BIbzvV.connections:add(Players.PlayerRemoving:Connect(function(JQDBzI) local msjGmf = BIbzvV.instances[JQDBzI] if msjGmf then msjGmf:destroy() end end)) BIbzvV.connections:add(RunService.RenderStepped:Connect(function() for _, msjGmf in pairs(BIbzvV.instances) do msjGmf:render() end end)) for _, JQDBzI in ipairs(Players:GetPlayers()) do if JQDBzI ~= LocalPlayer then BIbzvV.new(JQDBzI) end end end function xMzbRs:disable() BIbzvV.connections:destroy() for _, msjGmf in pairs(BIbzvV.instances) do msjGmf:destroy() end table.clear(BIbzvV.instances) if ScreenGui and ScreenGui.Parent then ScreenGui:Destroy() ScreenGui = nil end end return setmetatable({}, xMzbRs)
